{"ast":null,"code":"var _jsxFileName = \"/home/coapr/development/projects/patent/client/src/components/PatentScoreChart.js\";\nimport React from 'react';\nimport { Radar, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, ResponsiveContainer, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, PieChart, Pie, Cell } from 'recharts';\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\nconst PatentScoreChart = ({\n  utility,\n  novelty,\n  obviousness,\n  patentability,\n  chartType\n}) => {\n  const data = [{\n    name: 'Utility',\n    weighted: utility.utility_score || 0\n  }, {\n    name: 'Novelty',\n    weighted: novelty.novelty_score || 0\n  }, {\n    name: 'Non-Obviousness',\n    weighted: obviousness.obviousness_score || 0\n  }, {\n    name: 'Patentability Overall',\n    weighted: patentability.patentability_score || 0\n  }];\n  const renderRadarChart = () => /*#__PURE__*/React.createElement(RadarChart, {\n    cx: \"50%\",\n    cy: \"50%\",\n    outerRadius: \"80%\",\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PolarGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PolarAngleAxis, {\n    dataKey: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PolarRadiusAxis, {\n    angle: 30,\n    domain: [0, 1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Radar, {\n    name: \"Patent Scores\",\n    dataKey: \"weighted\",\n    stroke: \"#8884d8\",\n    fill: \"#8884d8\",\n    fillOpacity: 0.6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }));\n  const renderBarChart = () => /*#__PURE__*/React.createElement(BarChart, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    domain: [0, 1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"weighted\",\n    fill: \"#8884d8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n  const renderPieChart = () => /*#__PURE__*/React.createElement(PieChart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Pie, {\n    data: data,\n    cx: \"50%\",\n    cy: \"50%\",\n    labelLine: false,\n    outerRadius: 80,\n    fill: \"#8884d8\",\n    dataKey: \"weighted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, data.map((entry, index) => /*#__PURE__*/React.createElement(Cell, {\n    key: `cell-${index}`,\n    fill: COLORS[index % COLORS.length],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }));\n  const renderChart = () => {\n    switch (chartType) {\n      case 'radar':\n        return renderRadarChart();\n      case 'bar':\n        return renderBarChart();\n      case 'pie':\n        return renderPieChart();\n      default:\n        return renderRadarChart();\n    }\n  };\n  return /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, renderChart());\n};\nexport default PatentScoreChart;","map":{"version":3,"names":["React","Radar","RadarChart","PolarGrid","PolarAngleAxis","PolarRadiusAxis","ResponsiveContainer","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","PieChart","Pie","Cell","COLORS","PatentScoreChart","utility","novelty","obviousness","patentability","chartType","data","name","weighted","utility_score","novelty_score","obviousness_score","patentability_score","renderRadarChart","createElement","cx","cy","outerRadius","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","angle","domain","stroke","fill","fillOpacity","renderBarChart","strokeDasharray","renderPieChart","labelLine","map","entry","index","key","length","renderChart","width","height"],"sources":["/home/coapr/development/projects/patent/client/src/components/PatentScoreChart.js"],"sourcesContent":["import React from 'react';\nimport { Radar, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, ResponsiveContainer, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, PieChart, Pie, Cell } from 'recharts';\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\nconst PatentScoreChart = ({ utility, novelty, obviousness, patentability, chartType }) => {\n  const data = [\n    { name: 'Utility', weighted: utility.utility_score || 0 },\n    { name: 'Novelty', weighted: novelty.novelty_score || 0 },\n    { name: 'Non-Obviousness', weighted: obviousness.obviousness_score || 0 },\n    { name: 'Patentability Overall', weighted: patentability.patentability_score || 0 },\n  ];\n\n  const renderRadarChart = () => (\n    <RadarChart cx=\"50%\" cy=\"50%\" outerRadius=\"80%\" data={data}>\n      <PolarGrid />\n      <PolarAngleAxis dataKey=\"name\" />\n      <PolarRadiusAxis angle={30} domain={[0, 1]} />\n      <Radar name=\"Patent Scores\" dataKey=\"weighted\" stroke=\"#8884d8\" fill=\"#8884d8\" fillOpacity={0.6} />\n    </RadarChart>\n  );\n\n  const renderBarChart = () => (\n    <BarChart data={data}>\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"name\" />\n      <YAxis domain={[0, 1]} />\n      <Tooltip />\n      <Legend />\n      <Bar dataKey=\"weighted\" fill=\"#8884d8\" />\n    </BarChart>\n  );\n\n  const renderPieChart = () => (\n    <PieChart>\n      <Pie\n        data={data}\n        cx=\"50%\"\n        cy=\"50%\"\n        labelLine={false}\n        outerRadius={80}\n        fill=\"#8884d8\"\n        dataKey=\"weighted\"\n      >\n        {data.map((entry, index) => (\n          <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n        ))}\n      </Pie>\n      <Tooltip />\n      <Legend />\n    </PieChart>\n  );\n\n  const renderChart = () => {\n    switch (chartType) {\n      case 'radar':\n        return renderRadarChart();\n      case 'bar':\n        return renderBarChart();\n      case 'pie':\n        return renderPieChart();\n      default:\n        return renderRadarChart();\n    }\n  };\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={300}>\n      {renderChart()}\n    </ResponsiveContainer>\n  );\n};\n\nexport default PatentScoreChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}