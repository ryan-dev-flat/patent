{"ast":null,"code":"var _jsxFileName = \"/home/coapr/development/projects/patent/client/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\n// src/components/Dashboard.js\nimport React, { useEffect, useState } from 'react';\nimport axiosInstance from '../utils/axiosInstance';\nimport PatentCard from './PatentCard'; // Ensure this path is correct\nimport CreatePatentForm from './CreatePatentForm'; // Ensure this path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [stats, setStats] = useState({});\n  const [patents, setPatents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        const response = await axiosInstance.get('/dashboard');\n        setStats(response.data);\n      } catch (error) {\n        console.error('Error fetching dashboard data', error);\n        setError(error);\n      }\n    };\n    const fetchPatents = async () => {\n      try {\n        const response = await axiosInstance.get('/patents', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        setPatents(response.data);\n      } catch (error) {\n        console.error('Error fetching patents', error);\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchStats();\n    fetchPatents();\n  }, []);\n  const handleDeletePatent = id => {\n    setPatents(patents.filter(patent => patent.id !== id));\n  };\n  const handlePatentCreated = newPatentId => {\n    // Fetch the newly created patent and add it to the state\n    axiosInstance.get(`/patents/${newPatentId}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(response => {\n      setPatents([...patents, response.data]);\n      // Update the stats\n      setStats(prevStats => ({\n        ...prevStats,\n        patent_count: prevStats.patent_count + 1,\n        pending_patents_count: prevStats.pending_patents_count + 1 // Assuming new patents start as pending\n      }));\n    }).catch(error => {\n      console.error('Error fetching new patent', error);\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error loading data: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Patent Summary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Patents: \", stats.patent_count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Users: \", stats.user_count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Pending Patents: \", stats.pending_patents_count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Approved Patents: \", stats.approved_patents_count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Rejected Patents: \", stats.rejected_patents_count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Abandoned Patents: \", stats.abandoned_patents_count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Expired Patents: \", stats.expired_patents_count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Invalidated Patents: \", stats.invalidated_patents_count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreatePatentForm, {\n      onPatentCreated: handlePatentCreated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: patents.length > 0 ? patents.map(patent => /*#__PURE__*/_jsxDEV(PatentCard, {\n        patent: patent,\n        onDelete: handleDeletePatent\n      }, patent.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No patents found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"p6Hx6Wf/0ffB1qV9FZV4W7O9hK8=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axiosInstance","PatentCard","CreatePatentForm","jsxDEV","_jsxDEV","Dashboard","_s","stats","setStats","patents","setPatents","loading","setLoading","error","setError","fetchStats","response","get","data","console","fetchPatents","headers","Authorization","localStorage","getItem","handleDeletePatent","id","filter","patent","handlePatentCreated","newPatentId","then","prevStats","patent_count","pending_patents_count","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","message","user_count","approved_patents_count","rejected_patents_count","abandoned_patents_count","expired_patents_count","invalidated_patents_count","onPatentCreated","length","map","onDelete","_c","$RefreshReg$"],"sources":["/home/coapr/development/projects/patent/client/src/components/Dashboard.js"],"sourcesContent":["// src/components/Dashboard.js\nimport React, { useEffect, useState } from 'react';\nimport axiosInstance from '../utils/axiosInstance';\nimport PatentCard from './PatentCard'; // Ensure this path is correct\nimport CreatePatentForm from './CreatePatentForm'; // Ensure this path is correct\n\nconst Dashboard = () => {\n  const [stats, setStats] = useState({});\n  const [patents, setPatents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        const response = await axiosInstance.get('/dashboard');\n        setStats(response.data);\n      } catch (error) {\n        console.error('Error fetching dashboard data', error);\n        setError(error);\n      }\n    };\n\n    const fetchPatents = async () => {\n      try {\n        const response = await axiosInstance.get('/patents', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        setPatents(response.data);\n      } catch (error) {\n        console.error('Error fetching patents', error);\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchStats();\n    fetchPatents();\n  }, []);\n\n  const handleDeletePatent = (id) => {\n    setPatents(patents.filter(patent => patent.id !== id));\n  };\n\n  const handlePatentCreated = (newPatentId) => {\n    // Fetch the newly created patent and add it to the state\n    axiosInstance.get(`/patents/${newPatentId}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(response => {\n      setPatents([...patents, response.data]);\n      // Update the stats\n      setStats(prevStats => ({\n        ...prevStats,\n        patent_count: prevStats.patent_count + 1,\n        pending_patents_count: prevStats.pending_patents_count + 1 // Assuming new patents start as pending\n      }));\n    }).catch(error => {\n      console.error('Error fetching new patent', error);\n    });\n  };\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>Error loading data: {error.message}</p>;\n  }\n\n  return (\n    <div>\n      <h2>Patent Summary</h2>\n      <p>Total Patents: {stats.patent_count}</p>\n      <p>Total Users: {stats.user_count}</p>\n      <p>Pending Patents: {stats.pending_patents_count}</p>\n      <p>Approved Patents: {stats.approved_patents_count}</p>\n      <p>Rejected Patents: {stats.rejected_patents_count}</p>\n      <p>Abandoned Patents: {stats.abandoned_patents_count}</p>\n      <p>Expired Patents: {stats.expired_patents_count}</p>\n      <p>Invalidated Patents: {stats.invalidated_patents_count}</p>\n      <CreatePatentForm onPatentCreated={handlePatentCreated} />\n      <div>\n        {patents.length > 0 ? (\n          patents.map(patent => (\n            <PatentCard key={patent.id} patent={patent} onDelete={handleDeletePatent} />\n          ))\n        ) : (\n          <p>No patents found.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}