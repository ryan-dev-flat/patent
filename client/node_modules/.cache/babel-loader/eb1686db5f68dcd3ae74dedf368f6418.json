{"ast":null,"code":"var _jsxFileName = \"/home/coapr/development/projects/patent/client/src/components/Dashboard.js\";\nimport React, { useEffect, useState } from 'react';\nimport useAxios from '../utils/useAxios'; // Use useAxios hook for Axios instance\nimport PatentCard from './PatentCard';\nimport CreatePatentForm from './CreatePatentForm';\nconst Dashboard = () => {\n  const [stats, setStats] = useState({});\n  const [patents, setPatents] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const axiosInstance = useAxios(); // Get Axios instance with token handling\n\n  // Fetch dashboard statistics\n  const fetchStats = async () => {\n    try {\n      const response = await axiosInstance.get('/dashboard');\n      setStats(response.data);\n    } catch (error) {\n      console.error('Error fetching dashboard data', error);\n      setError(error);\n    }\n  };\n\n  // Fetch all patents\n  const fetchPatents = async () => {\n    try {\n      const response = await axiosInstance.get('/patents');\n      setPatents(response.data);\n    } catch (error) {\n      console.error('Error fetching patents', error);\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch all users\n  const fetchUsers = async () => {\n    try {\n      const response = await axiosInstance.get('/users/all');\n      setUsers(response.data);\n    } catch (error) {\n      console.error('Error fetching users', error);\n      setError(error);\n    }\n  };\n  useEffect(() => {\n    fetchStats();\n    fetchPatents();\n    fetchUsers();\n  }, [axiosInstance]);\n\n  // Handle patent deletion\n  const handleDeletePatent = id => {\n    setPatents(patents.filter(patent => patent.id !== id));\n    // Update the stats accordingly\n    setStats(prevStats => ({\n      ...prevStats,\n      patent_count: prevStats.patent_count - 1,\n      pending_patents_count: prevStats.pending_patents_count - 1 // Adjust based on the patent's status\n    }));\n  };\n\n  // Handle patent creation\n  const handlePatentCreated = async newPatentId => {\n    if (!newPatentId) {\n      console.error('No patent ID received:', newPatentId);\n      return;\n    }\n    // Fetch the newly created patent and add it to the state\n    try {\n      const response = await axiosInstance.get(`/patents/${newPatentId}`);\n      setPatents([response.data, ...patents]); // Prepend the new patent\n      // Update the stats\n      setStats(prevStats => ({\n        ...prevStats,\n        patent_count: prevStats.patent_count + 1,\n        pending_patents_count: prevStats.pending_patents_count + 1 // Assuming new patents start as pending\n      }));\n    } catch (error) {\n      console.error('Error fetching new patent:', error);\n    }\n  };\n\n  // Handle patent update\n  const handlePatentUpdated = async updatedPatentId => {\n    try {\n      // Fetch the updated patent\n      const response = await axiosInstance.get(`/patents/${updatedPatentId}`);\n      const updatedPatent = response.data;\n\n      // Log the updated patent data received from the server\n      console.log('Updated patent fetched from server:', updatedPatent);\n\n      // Log the current state of patents before updating\n      console.log('Current patents state:', patents);\n\n      // Update the state with the newly fetched patent data\n      setPatents(prevPatents => prevPatents.map(patent => patent.id === updatedPatentId ? updatedPatent : patent));\n\n      // Log the state after updating patents\n      console.log('Updated patents state:', patents);\n    } catch (error) {\n      console.error('Error fetching updated patent', error);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 16\n      }\n    }, \"Loading...\");\n  }\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 16\n      }\n    }, \"Error loading data: \", error.message);\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, \"Dashboard\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 19\n    }\n  }, \"Patent Summary\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 19\n    }\n  }, \"Total Patents: \", stats.patent_count), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }\n  }, \"Total Users: \", stats.user_count), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  }, \"Pending Patents: \", stats.pending_patents_count), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 19\n    }\n  }, \"Approved Patents: \", stats.approved_patents_count)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CreatePatentForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, patents.length > 0 ? patents.map(patent => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 mb-3\",\n    key: patent.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(PatentCard, {\n    patent: patent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 23\n    }\n  }))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 19\n    }\n  }, \"No patents found.\")))));\n};\nexport default Dashboard;","map":{"version":3,"names":["React","useEffect","useState","useAxios","PatentCard","CreatePatentForm","Dashboard","stats","setStats","patents","setPatents","users","setUsers","loading","setLoading","error","setError","axiosInstance","fetchStats","response","get","data","console","fetchPatents","fetchUsers","handleDeletePatent","id","filter","patent","prevStats","patent_count","pending_patents_count","handlePatentCreated","newPatentId","handlePatentUpdated","updatedPatentId","updatedPatent","log","prevPatents","map","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","message","className","user_count","approved_patents_count","length","key"],"sources":["/home/coapr/development/projects/patent/client/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport useAxios from '../utils/useAxios'; // Use useAxios hook for Axios instance\nimport PatentCard from './PatentCard'; \nimport CreatePatentForm from './CreatePatentForm'; \n\nconst Dashboard = () => {\n    const [stats, setStats] = useState({});\n    const [patents, setPatents] = useState([]);\n    const [users, setUsers] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    const axiosInstance = useAxios(); // Get Axios instance with token handling\n\n    // Fetch dashboard statistics\n    const fetchStats = async () => {\n        try {\n            const response = await axiosInstance.get('/dashboard');\n            setStats(response.data);\n        } catch (error) {\n            console.error('Error fetching dashboard data', error);\n            setError(error);\n        }\n    };\n\n    // Fetch all patents\n    const fetchPatents = async () => {\n        try {\n            const response = await axiosInstance.get('/patents');\n            setPatents(response.data);\n        } catch (error) {\n            console.error('Error fetching patents', error);\n            setError(error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Fetch all users\n    const fetchUsers = async () => {\n        try {\n            const response = await axiosInstance.get('/users/all');\n            setUsers(response.data);\n        } catch (error) {\n            console.error('Error fetching users', error);\n            setError(error);\n        }\n    };\n\n    useEffect(() => {\n        fetchStats();\n        fetchPatents();\n        fetchUsers();\n    }, [axiosInstance]);\n\n    // Handle patent deletion\n    const handleDeletePatent = (id) => {\n        setPatents(patents.filter(patent => patent.id !== id));\n        // Update the stats accordingly\n        setStats(prevStats => ({\n            ...prevStats,\n            patent_count: prevStats.patent_count - 1,\n            pending_patents_count: prevStats.pending_patents_count - 1 // Adjust based on the patent's status\n        }));\n    };\n\n    // Handle patent creation\n    const handlePatentCreated = async (newPatentId) => {\n        if (!newPatentId) {\n            console.error('No patent ID received:', newPatentId);\n            return;\n        }\n        // Fetch the newly created patent and add it to the state\n        try {\n            const response = await axiosInstance.get(`/patents/${newPatentId}`);\n            setPatents([response.data, ...patents]); // Prepend the new patent\n            // Update the stats\n            setStats(prevStats => ({\n                ...prevStats,\n                patent_count: prevStats.patent_count + 1,\n                pending_patents_count: prevStats.pending_patents_count + 1 // Assuming new patents start as pending\n            }));\n        } catch (error) {\n            console.error('Error fetching new patent:', error);\n        }\n    };\n\n    // Handle patent update\n    const handlePatentUpdated = async (updatedPatentId) => {\n        try {\n          // Fetch the updated patent\n          const response = await axiosInstance.get(`/patents/${updatedPatentId}`);\n          const updatedPatent = response.data;\n      \n          // Log the updated patent data received from the server\n          console.log('Updated patent fetched from server:', updatedPatent);\n      \n          // Log the current state of patents before updating\n          console.log('Current patents state:', patents);\n      \n          // Update the state with the newly fetched patent data\n          setPatents((prevPatents) =>\n            prevPatents.map((patent) =>\n              patent.id === updatedPatentId ? updatedPatent : patent\n            )\n          );\n      \n          // Log the state after updating patents\n          console.log('Updated patents state:', patents);\n        } catch (error) {\n          console.error('Error fetching updated patent', error);\n        }\n      };\n      \n      \n\n    if (loading) {\n        return <p>Loading...</p>;\n    }\n\n    if (error) {\n        return <p>Error loading data: {error.message}</p>;\n    }\n\n    return (\n        <div className=\"container mt-5\">\n          <h2>Dashboard</h2>\n          <div className=\"row\">\n            <div className=\"col-md-4\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">Patent Summary</h5>\n                  <p>Total Patents: {stats.patent_count}</p>\n                  <p>Total Users: {stats.user_count}</p>\n                  <p>Pending Patents: {stats.pending_patents_count}</p>\n                  <p>Approved Patents: {stats.approved_patents_count}</p>\n                </div>\n              </div>\n            </div>\n    \n            <div className=\"col-md-8\">\n              <CreatePatentForm />\n              <div className=\"row mt-3\">\n                {patents.length > 0 ? (\n                  patents.map(patent => (\n                    <div className=\"col-md-6 mb-3\" key={patent.id}>\n                      <PatentCard patent={patent} />\n                    </div>\n                  ))\n                ) : (\n                  <p>No patents found.</p>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    };\n    \n    export default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}