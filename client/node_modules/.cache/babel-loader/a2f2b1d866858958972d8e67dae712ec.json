{"ast":null,"code":"var _jsxFileName = \"/home/coapr/development/projects/patent/client/src/components/Dashboard.js\";\nimport React, { useEffect, useState } from 'react';\nimport axiosInstance from '../utils/axiosInstance';\nimport PatentCard from './PatentCard'; // Ensure this path is correct\nimport CreatePatentForm from './CreatePatentForm'; // Ensure this path is correct\n\nconst Dashboard = () => {\n  const [stats, setStats] = useState({});\n  const [patents, setPatents] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchStats = async () => {\n    try {\n      const response = await axiosInstance.get('/dashboard');\n      setStats(response.data);\n    } catch (error) {\n      console.error('Error fetching dashboard data', error);\n      setError(error);\n    }\n  };\n  const fetchPatents = async () => {\n    try {\n      const response = await axiosInstance.get('/patents', {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setPatents(response.data);\n    } catch (error) {\n      console.error('Error fetching patents', error);\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchUsers = async () => {\n    try {\n      const response = await axiosInstance.get('/users/all', {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setUsers(response.data);\n    } catch (error) {\n      console.error('Error fetching users', error);\n      setError(error);\n    }\n  };\n  useEffect(() => {\n    fetchStats();\n    fetchPatents();\n    fetchUsers();\n  }, []);\n  const handleDeletePatent = id => {\n    setPatents(patents.filter(patent => patent.id !== id));\n    // Update the stats accordingly\n    setStats(prevStats => ({\n      ...prevStats,\n      patent_count: prevStats.patent_count - 1,\n      pending_patents_count: prevStats.pending_patents_count - 1 // Adjust based on the patent's status\n    }));\n  };\n  const handlePatentCreated = newPatentId => {\n    // Fetch the newly created patent and add it to the state\n    axiosInstance.get(`/patents/${newPatentId}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(response => {\n      setPatents([...patents, response.data]);\n      // Update the stats\n      setStats(prevStats => ({\n        ...prevStats,\n        patent_count: prevStats.patent_count + 1,\n        pending_patents_count: prevStats.pending_patents_count + 1 // Assuming new patents start as pending\n      }));\n    }).catch(error => {\n      console.error('Error fetching new patent', error);\n    });\n  };\n  const handlePatentUpdated = updatedPatentId => {\n    // Fetch the updated patent and update the state\n    axiosInstance.get(`/patents/${updatedPatentId}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(response => {\n      const updatedPatent = response.data;\n      setPatents(patents.map(patent => patent.id === updatedPatentId ? updatedPatent : patent));\n      // Update the stats based on the updated patent's status\n      fetchStats(); // Re-fetch stats to ensure they are up-to-date\n    }).catch(error => {\n      console.error('Error fetching updated patent', error);\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 12\n      }\n    }, \"Error loading data: \", error.message);\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, \"Patent Summary\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, \"Total Patents: \", stats.patent_count), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, \"Total Users: \", stats.user_count), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, \"Pending Patents: \", stats.pending_patents_count), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, \"Approved Patents: \", stats.approved_patents_count), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, \"Rejected Patents: \", stats.rejected_patents_count), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, \"Abandoned Patents: \", stats.abandoned_patents_count), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, \"Expired Patents: \", stats.expired_patents_count), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, \"Invalidated Patents: \", stats.invalidated_patents_count), /*#__PURE__*/React.createElement(CreatePatentForm, {\n    onPatentCreated: handlePatentCreated,\n    users: users,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, patents.length > 0 ? patents.map(patent => /*#__PURE__*/React.createElement(PatentCard, {\n    key: patent.id,\n    patent: patent,\n    onDelete: handleDeletePatent,\n    onUpdate: handlePatentUpdated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, \"No patents found.\")));\n};\nexport default Dashboard;","map":{"version":3,"names":["React","useEffect","useState","axiosInstance","PatentCard","CreatePatentForm","Dashboard","stats","setStats","patents","setPatents","users","setUsers","loading","setLoading","error","setError","fetchStats","response","get","data","console","fetchPatents","headers","Authorization","localStorage","getItem","fetchUsers","handleDeletePatent","id","filter","patent","prevStats","patent_count","pending_patents_count","handlePatentCreated","newPatentId","then","catch","handlePatentUpdated","updatedPatentId","updatedPatent","map","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","message","user_count","approved_patents_count","rejected_patents_count","abandoned_patents_count","expired_patents_count","invalidated_patents_count","onPatentCreated","length","key","onDelete","onUpdate"],"sources":["/home/coapr/development/projects/patent/client/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axiosInstance from '../utils/axiosInstance';\nimport PatentCard from './PatentCard'; // Ensure this path is correct\nimport CreatePatentForm from './CreatePatentForm'; // Ensure this path is correct\n\nconst Dashboard = () => {\n  const [stats, setStats] = useState({});\n  const [patents, setPatents] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const fetchStats = async () => {\n    try {\n      const response = await axiosInstance.get('/dashboard');\n      setStats(response.data);\n    } catch (error) {\n      console.error('Error fetching dashboard data', error);\n      setError(error);\n    }\n  };\n\n  const fetchPatents = async () => {\n    try {\n      const response = await axiosInstance.get('/patents', {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setPatents(response.data);\n    } catch (error) {\n      console.error('Error fetching patents', error);\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchUsers = async () => {\n    try {\n      const response = await axiosInstance.get('/users/all', {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setUsers(response.data);\n    } catch (error) {\n      console.error('Error fetching users', error);\n      setError(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchStats();\n    fetchPatents();\n    fetchUsers();\n  }, []);\n\n  const handleDeletePatent = (id) => {\n    setPatents(patents.filter(patent => patent.id !== id));\n    // Update the stats accordingly\n    setStats(prevStats => ({\n      ...prevStats,\n      patent_count: prevStats.patent_count - 1,\n      pending_patents_count: prevStats.pending_patents_count - 1 // Adjust based on the patent's status\n    }));\n  };\n\n  const handlePatentCreated = (newPatentId) => {\n    // Fetch the newly created patent and add it to the state\n    axiosInstance.get(`/patents/${newPatentId}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(response => {\n      setPatents([...patents, response.data]);\n      // Update the stats\n      setStats(prevStats => ({\n        ...prevStats,\n        patent_count: prevStats.patent_count + 1,\n        pending_patents_count: prevStats.pending_patents_count + 1 // Assuming new patents start as pending\n      }));\n    }).catch(error => {\n      console.error('Error fetching new patent', error);\n    });\n  };\n\n  const handlePatentUpdated = (updatedPatentId) => {\n    // Fetch the updated patent and update the state\n    axiosInstance.get(`/patents/${updatedPatentId}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(response => {\n      const updatedPatent = response.data;\n      setPatents(patents.map(patent => (patent.id === updatedPatentId ? updatedPatent : patent)));\n      // Update the stats based on the updated patent's status\n      fetchStats(); // Re-fetch stats to ensure they are up-to-date\n    }).catch(error => {\n      console.error('Error fetching updated patent', error);\n    });\n  };\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>Error loading data: {error.message}</p>;\n  }\n\n  return (\n    <div>\n      <h2>Patent Summary</h2>\n      <p>Total Patents: {stats.patent_count}</p>\n      <p>Total Users: {stats.user_count}</p>\n      <p>Pending Patents: {stats.pending_patents_count}</p>\n      <p>Approved Patents: {stats.approved_patents_count}</p>\n      <p>Rejected Patents: {stats.rejected_patents_count}</p>\n      <p>Abandoned Patents: {stats.abandoned_patents_count}</p>\n      <p>Expired Patents: {stats.expired_patents_count}</p>\n      <p>Invalidated Patents: {stats.invalidated_patents_count}</p>\n      <CreatePatentForm onPatentCreated={handlePatentCreated} users={users} />\n      <div>\n        {patents.length > 0 ? (\n          patents.map(patent => (\n            <PatentCard key={patent.id} patent={patent} onDelete={handleDeletePatent} onUpdate={handlePatentUpdated} />\n          ))\n        ) : (\n          <p>No patents found.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}