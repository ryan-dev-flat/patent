{"ast":null,"code":"var _jsxFileName = \"/home/coapr/development/projects/patent/client/src/components/MyChartComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Chart, registerables } from 'chart.js';\n\n// Register all necessary components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nconst MyChartComponent = ({\n  data\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  const chartInstanceRef = useRef(null);\n  useEffect(() => {\n    // Destroy the previous chart instance if it exists\n    if (chartInstanceRef.current) {\n      chartInstanceRef.current.destroy();\n    }\n    const ctx = chartRef.current.getContext('2d');\n    chartInstanceRef.current = new Chart(ctx, {\n      type: 'bar',\n      // or any other chart type\n      data: data,\n      options: {\n        responsive: true,\n        plugins: {\n          title: {\n            display: true,\n            text: 'My Chart'\n          },\n          tooltip: {\n            mode: 'index',\n            intersect: false\n          },\n          legend: {\n            display: true,\n            position: 'top'\n          }\n        }\n      }\n    });\n\n    // Cleanup function to destroy the chart instance when the component unmounts\n    return () => {\n      if (chartInstanceRef.current) {\n        chartInstanceRef.current.destroy();\n      }\n    };\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: chartRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 12\n  }, this);\n};\n_s(MyChartComponent, \"0kidk2EAizBYKgfY+KQx4ULbe78=\");\n_c = MyChartComponent;\nexport default MyChartComponent;\nvar _c;\n$RefreshReg$(_c, \"MyChartComponent\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","registerables","jsxDEV","_jsxDEV","register","MyChartComponent","data","_s","chartRef","chartInstanceRef","current","destroy","ctx","getContext","type","options","responsive","plugins","title","display","text","tooltip","mode","intersect","legend","position","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/coapr/development/projects/patent/client/src/components/MyChartComponent.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Chart, registerables } from 'chart.js';\n\n// Register all necessary components\nChart.register(...registerables);\n\nconst MyChartComponent = ({ data }) => {\n    const chartRef = useRef(null);\n    const chartInstanceRef = useRef(null);\n\n    useEffect(() => {\n        // Destroy the previous chart instance if it exists\n        if (chartInstanceRef.current) {\n            chartInstanceRef.current.destroy();\n        }\n\n        const ctx = chartRef.current.getContext('2d');\n        chartInstanceRef.current = new Chart(ctx, {\n            type: 'bar', // or any other chart type\n            data: data,\n            options: {\n                responsive: true,\n                plugins: {\n                    title: {\n                        display: true,\n                        text: 'My Chart'\n                    },\n                    tooltip: {\n                        mode: 'index',\n                        intersect: false,\n                    },\n                    legend: {\n                        display: true,\n                        position: 'top',\n                    }\n                }\n            }\n        });\n\n        // Cleanup function to destroy the chart instance when the component unmounts\n        return () => {\n            if (chartInstanceRef.current) {\n                chartInstanceRef.current.destroy();\n            }\n        };\n    }, [data]);\n\n    return <canvas ref={chartRef}></canvas>;\n};\n\nexport default MyChartComponent;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,KAAK,EAAEC,aAAa,QAAQ,UAAU;;AAE/C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAH,KAAK,CAACI,QAAQ,CAAC,GAAGH,aAAa,CAAC;AAEhC,MAAMI,gBAAgB,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAMC,QAAQ,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMU,gBAAgB,GAAGV,MAAM,CAAC,IAAI,CAAC;EAErCD,SAAS,CAAC,MAAM;IACZ;IACA,IAAIW,gBAAgB,CAACC,OAAO,EAAE;MAC1BD,gBAAgB,CAACC,OAAO,CAACC,OAAO,CAAC,CAAC;IACtC;IAEA,MAAMC,GAAG,GAAGJ,QAAQ,CAACE,OAAO,CAACG,UAAU,CAAC,IAAI,CAAC;IAC7CJ,gBAAgB,CAACC,OAAO,GAAG,IAAIV,KAAK,CAACY,GAAG,EAAE;MACtCE,IAAI,EAAE,KAAK;MAAE;MACbR,IAAI,EAAEA,IAAI;MACVS,OAAO,EAAE;QACLC,UAAU,EAAE,IAAI;QAChBC,OAAO,EAAE;UACLC,KAAK,EAAE;YACHC,OAAO,EAAE,IAAI;YACbC,IAAI,EAAE;UACV,CAAC;UACDC,OAAO,EAAE;YACLC,IAAI,EAAE,OAAO;YACbC,SAAS,EAAE;UACf,CAAC;UACDC,MAAM,EAAE;YACJL,OAAO,EAAE,IAAI;YACbM,QAAQ,EAAE;UACd;QACJ;MACJ;IACJ,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACT,IAAIhB,gBAAgB,CAACC,OAAO,EAAE;QAC1BD,gBAAgB,CAACC,OAAO,CAACC,OAAO,CAAC,CAAC;MACtC;IACJ,CAAC;EACL,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC;EAEV,oBAAOH,OAAA;IAAQuB,GAAG,EAAElB;EAAS;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAS,CAAC;AAC3C,CAAC;AAACvB,EAAA,CA1CIF,gBAAgB;AAAA0B,EAAA,GAAhB1B,gBAAgB;AA4CtB,eAAeA,gBAAgB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}