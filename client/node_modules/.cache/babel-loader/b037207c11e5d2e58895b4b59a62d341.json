{"ast":null,"code":"var _jsxFileName = \"/home/coapr/development/projects/patent/client/src/index.js\";\nimport React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App';\nimport { UserProvider } from './context/UserContext';\nimport './index.css'; // Assuming you have some global styles\n\nconst container = document.getElementById('root');\nconst root = createRoot(container); // createRoot(container!) if you use TypeScript\nroot.render(/*#__PURE__*/React.createElement(UserProvider, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n})));","map":{"version":3,"names":["React","createRoot","App","UserProvider","container","document","getElementById","root","render","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/coapr/development/projects/patent/client/src/index.js"],"sourcesContent":["import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App';\nimport { UserProvider } from './context/UserContext';\nimport './index.css'; // Assuming you have some global styles\n\nconst container = document.getElementById('root');\nconst root = createRoot(container); // createRoot(container!) if you use TypeScript\nroot.render(\n  <UserProvider>\n    <App />\n  </UserProvider>\n);\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,GAAG,MAAM,OAAO;AACvB,SAASC,YAAY,QAAQ,uBAAuB;AACpD,OAAO,aAAa,CAAC,CAAC;;AAEtB,MAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;AACjD,MAAMC,IAAI,GAAGN,UAAU,CAACG,SAAS,CAAC,CAAC,CAAC;AACpCG,IAAI,CAACC,MAAM,cACTR,KAAA,CAAAS,aAAA,CAACN,YAAY;EAAAO,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,gBACXf,KAAA,CAAAS,aAAA,CAACP,GAAG;EAAAQ,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,CAAE,CACM,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}